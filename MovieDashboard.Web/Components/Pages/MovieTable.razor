@page "/movie"
@using Shared
@rendermode InteractiveServer
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject MovieDataApiClient MovieApi

<PageTitle>Movie</PageTitle>

<h1>Movie Details</h1>


@if (Movies is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudTable T="Movie" Items="@Movies" Hover="true" OnRowClick="@OnRowClick" Breakpoint="Breakpoint.Sm" MultiSelection="true" SelectOnRowClick="false">
        <ColGroup>
            <col style="width:50px;" />
            <col />
            <col />
            <col />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Director</MudTh>
            <MudTh>Release Date</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                @if (context.ShowDetails)
                {
                    <MudIconButton Icon="fas fa-minus" Color="Color.Tertiary" OnClick="@(() => ShowBtnPress(context))" />
                }
                else
                {
                    <MudIconButton Icon="fas fa-plus" Color="Color.Tertiary" OnClick="@(() => ShowBtnPress(context))" />
                }
            </MudTd>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd DataLabel="Director">@context.Director</MudTd>
            <MudTd DataLabel="Release Date">@context.ReleaseDate.ToShortDateString()</MudTd>
        </RowTemplate>
        <ChildRowContent>
            @if (context.ShowDetails)
            {
                <MudTr>
                    <td colspan="4">
                        <MudCard Elevation="0">
                            <MudCardHeader>
                                <CardHeaderContent>
                                    <MudText Typo="Typo.body1"><strong>@context.Description</strong></MudText>
                                </CardHeaderContent>
                            </MudCardHeader>
                        </MudCard>
                        <MudCardContent Class="pa-0">
                            <MudTable Items="@context.Characters?.ToList()" Context="CharacterContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0">
                                <ColGroup>
                                    <col />
                                    <col />
                                </ColGroup>
                                <HeaderContent>
                                    <MudTh>Name</MudTh>
                                    <MudTh>Actor</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Name">@CharacterContext.Name</MudTd>
                                    <MudTd DataLabel="Actor">@CharacterContext.Actor.FirstName @CharacterContext.Actor.LastName</MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudCardContent>
                    </td>
                </MudTr>
            }
        </ChildRowContent>
    </MudTable>
}
@code
{
    private static IEnumerable<Movie>? Movies { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        Movies = await MovieApi.GetMovieDataAsync();
    }
    
    private static void ShowBtnPress(Movie movie)
    {
        // Movie? tmpMovie = Movies?.FirstOrDefault(m => m.Id == movieId);
        movie.ShowDetails = !movie.ShowDetails;
    }
    
    private static void OnRowClick(TableRowClickEventArgs<Movie> args)
    {
        if (args.Item is not null)
        {
            args.Item!.ShowDetails = !args.Item.ShowDetails;
        }
    }
}